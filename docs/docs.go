// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/shortlink": {
            "post": {
                "description": "Create a new short URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shortlinks"
                ],
                "summary": "Create Shortlink",
                "parameters": [
                    {
                        "description": "Original URL payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ShortURLPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ShortURL"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/shortlinks": {
            "get": {
                "description": "Fetches a list of all short URLs stored in the system",
                "tags": [
                    "shortlinks"
                ],
                "summary": "Get all short URLs",
                "responses": {
                    "200": {
                        "description": "Successfully fetched URLs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ShortURL"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch URLs",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/{shortURL}": {
            "get": {
                "description": "Redirects to the original URL based on the provided short URL",
                "tags": [
                    "shortlinks"
                ],
                "summary": "Redirect to the original URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short URL",
                        "name": "shortURL",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirected to the original URL",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Short URL is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Short URL not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to update access count",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the original URL for a given short URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shortlinks"
                ],
                "summary": "Update a short URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short URL",
                        "name": "shortURL",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New original URL",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ShortURL"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Short URL updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or Short URL is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Short URL not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to update short URL",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a given short URL and its related data",
                "tags": [
                    "shortlinks"
                ],
                "summary": "Delete a short URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short URL",
                        "name": "shortURL",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Short URL deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Short URL is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Short URL not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to delete short URL",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/{shortURL}/stats": {
            "get": {
                "description": "Fetches the statistics (e.g., access count) for a given short URL",
                "tags": [
                    "shortlinks"
                ],
                "summary": "Get short URL statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short URL",
                        "name": "shortURL",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics fetched successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Short URL is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Short URL not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data is omitted if nil or empty"
                },
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "models.ShortURL": {
            "type": "object",
            "properties": {
                "access_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "original_url": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ShortURLPayload": {
            "type": "object",
            "required": [
                "original_url"
            ],
            "properties": {
                "original_url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
